@model BeFit.Models.Meal

@{
    ViewBag.Title = "Szczegóły posiłku";
}

<h2>Szczegóły posiłku</h2>

<div>
    <hr />
    <dl class="dl-horizontal">
        <dt>
            @Html.DisplayNameFor(model => model.Name)
        </dt>

        <dd>
            @Html.DisplayFor(model => model.Name)
        </dd>

        <dt>
            @Html.DisplayNameFor(model => model.Description)
        </dt>

        <dd>
            @Html.DisplayFor(model => model.Description)
        </dd>

        <dt>
            @Html.DisplayNameFor(model => model.MealIngridientMeals)
        </dt>

        <dd>
            <table class="table">
                <tr>
                    <th>Składniki</th>
                    <th>Ilość</th>
                    <th>Jednostka miary</th>
                    <th>Tłuszcz</th>
                    <th>Białko</th>
                    <th>Węglowodany</th>
                    <th>Wartość energetyczna</th>
                </tr>
                @{ decimal fats = 0;
                    decimal proteins = 0;
                    decimal carbs = 0;
                    decimal kcals = 0;
                }
                @foreach (var item in Model.MealIngridientMeals)
                {
                    <tr>
                        <td>
                            @Html.DisplayFor(modelItem => item.MealIngridient.Ingridient.Name)
                        </td>
                        <td>
                            @Html.DisplayFor(modelItem => item.MealIngridient.Quantity)
                        </td>
                        <td>
                            @Html.DisplayFor(modelItem => item.MealIngridient.Ingridient.MeasureRate)
                        </td>
                        <td>
                            @{decimal fat = (int)(item.MealIngridient.Ingridient.Fat * (item.MealIngridient.Quantity / 100)); }
                            @Html.DisplayFor(modelItem => fat) g
                        </td>
                        <td>
                            @{decimal protein = (decimal)(item.MealIngridient.Ingridient.Protein * (item.MealIngridient.Quantity / 100)); }
                            @Html.DisplayFor(modelItem => protein) g
                        </td>
                        <td>
                            @{decimal carbo = (decimal)(item.MealIngridient.Ingridient.CarboHydrates * (item.MealIngridient.Quantity / 100)); }
                            @Html.DisplayFor(modelItem => carbo) g
                        </td>
                        <td>
                            @{int kcal = (int)(item.MealIngridient.Ingridient.EnergeticValue * (item.MealIngridient.Quantity / 100)); }
                            @Html.DisplayFor(modelItem => kcal) kcal
                        </td>
                    </tr>
                        fats += fat;
                        proteins += protein;
                        carbs += carbo;
                        kcals += kcal;
                }
                <tfoot>
                    <tr>
                        <td>Łącznie:</td>
                        <td></td>
                        <td></td>
                        <td>
                            @Html.DisplayFor(modelItem => fats) g
                        </td>
                        <td>
                            @Html.DisplayFor(modelItem => proteins) g
                        </td>
                        <td>
                            @Html.DisplayFor(modelItem => carbs) g
                        </td>
                        <td>
                            @Html.DisplayFor(modelItem => kcals) kcal
                        </td>
                    </tr>
                </tfoot>
            </table>
        </dd>
    </dl>
</div>
<p>
    @Html.ActionLink("Edycja", "Edit", new { id = Model.Id }) |
    @Html.ActionLink("Powrót do listy posiłków", "Index")
</p>
